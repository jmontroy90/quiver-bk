{
  "title": "Chapter 11: Stateful Service",
  "cells": [
    {
      "type": "markdown",
      "data": "How do you deploy a stateful service? Maybe you do a `Deployment` of a `ReplicaSet` with _replicas=1_, and then add a `PersistentVolume` and associated `PersistentVolumeClaim`? Nope. `ReplicaSet` is not always exactly 1 there, and more than one instance of a stateful store (think ZooKeeper, MySQL) might be disastrous.\n\nYou can't just scale the number of replicas, either with one or many PVCs. That doesn't scale in Kubernetes, or might require some in-app folder logic for logical separatios between instances. Also messy. You also need stable network identities, and perhaps some sense of ordinality and quorum. All this is unavailable with `ReplicaSet`.\n\nSo we use **StatefulSet**! StatefulSet has guarantees around ordinality (used during scaling events), identity, persistent volumes, and persistent networking.\n* PersistentVolumes must be provisioned separately and added to a StatefulSet via the `volumeClaimTemplates` section. You can also use a PersistentVolume Provisioner.\n* A Headless Service (a Service without a specified clusterIP) is used manually.\n* Each network identity is a combo of the service name and the ordinal. This used with the Headless Service to create corresponding A Records and a SRV record for persistent networking and discovery."
    }
  ]
}