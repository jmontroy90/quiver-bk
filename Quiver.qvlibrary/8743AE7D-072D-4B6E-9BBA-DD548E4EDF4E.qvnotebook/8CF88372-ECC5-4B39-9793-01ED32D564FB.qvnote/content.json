{
  "title": "Chapter 13 - Component Cohesion",
  "cells": [
    {
      "type": "markdown",
      "data": "Three principles to discuss on the question: **which classes belong in which components?**\n\n* REP: The Reuse/Release Equivalence Principle\n* CCP: The Common Closure Principle\n* CRP: The Common Reuse Principle\n\n### The Reuse/Release Equivalence Principle\n\nIn short - releases are good. Releases with common themes, logical groupings of changes, and good documentation are better. Whichever classes are released should \"make sense\" together. What does it mean to \"make sense\"?\n\n### The Common Closure Principle\n\n> Gather into components those classes that change for the same reasons and at the same times. Separate into different components those classes that change at different times and for different reasons.\n\nThis is SRP at a component level. Imagine a datetime library - pretty cross-cutting, right? Maybe if you've done it right, an app-specific tweak to some parsing edge case only ends up modifying that one app's component.\n\nThis is obviously important for redeploys too - let's not redeploy _everything_.\n\nThis is also slightly OCP - gather together classes that are closed to the same kind of changes.\n\n### The Common Reuse Principle\n\n> Don't depend on things you don't need.\n\nIf two classes are frequently used together, maybe they just belong together into one common component. Better expressed conversely, though -- two unrelated classes shouldn't have dependencies, i.e. don't force your user's hand in upgrading and paying attention! This is like ISP - don't depend on methods you don't use, and don't depend on classes you don't use.\n\nThe right balance between these three principles is expressed via the below tension diagram. A good developer knows how to find the right balance between this depending on the team's current needs (i.e. -- early in your development? the CCP is more important than CRP, since we need to actually write code!)\n\n![IMAGE](quiver-image-url/A4DE4045C5C7ED7333425B27B5F99E1B.jpg =387x284)"
    }
  ]
}